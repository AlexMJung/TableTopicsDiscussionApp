var myApp=angular.module("myApp",["ngRoute"]);myApp.filter("secondsToDateTime",[function(){return function(a){return new Date(1970,0,1).setSeconds(a)}}]),myApp.config(["$routeProvider","$locationProvider",function(a,b){b.hashPrefix(""),a.when("/login",{templateUrl:"/views/templates/login.html",controller:"LoginController"}).when("/register",{templateUrl:"/views/templates/register.html",controller:"LoginController"}).when("/chooseTheme",{templateUrl:"/views/templates/chooseTheme.html",controller:"ChooseThemeController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/addParticipants",{templateUrl:"/views/templates/addParticipants.html",controller:"AddParticipantsController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/sessionIntro",{templateUrl:"/views/templates/sessionIntro.html",controller:"SessionIntroController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/session",{templateUrl:"/views/templates/session.html",controller:"SessionController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/socket",{templateUrl:"/views/templates/socket.html",controller:"SocketController"}).otherwise({redirectTo:"login"})}]),myApp.controller("AddParticipantsController",["$scope","$location","UserService",function(a,b,c){function d(b){if(console.log("inside addParticipant with:",b),""!==b){var c=angular.copy(b);participantObject={},participantObject.id=i,participantObject.name=c,participantObject.time=0,participantObject.speakStatus="hasNot",a.currentSessionObject.participantsArray.push(participantObject),console.log("$scope.currentSessionObject.participantsArray",a.currentSessionObject.participantsArray),a.participant.name="",i+=1}}function e(b){a.currentSessionObject.participantsArray.splice(b,1)}function f(){b.path("/chooseTheme")}function g(){io().on("emitName",function(b){console.log("I've heard from the server that I need to do something"),a.$apply(d(b))})}a.userObject=c.userObject,a.logout=c.logout;var h={};h.name="",h.time="",h.speakStatus="hasNot",a.participant=h,a.currentThemeObject=c.currentThemeObject,a.currentSessionObject=c.currentSessionObject,a.addParticipant=d;var i=0;a.deleteParticipant=e,a.saveSession=c.saveSession,a.goBacktoChooseTheme=f,g()}]),myApp.controller("ChooseThemeController",["$scope","UserService",function(a,b){function c(b){if(""!==b){var c=angular.copy(b);a.currentThemeObject.questionsArray.push(c),a.newQuestion=""}}function d(b){a.currentThemeObject.questionsArray.splice(b,1),console.log("$scope.currentThemeObject.questionsArray",a.currentThemeObject.questionsArray)}function e(b){a.currentThemeObject=b,b={}}a.userObject=b.userObject,a.logout=b.logout,a.currentThemeObject=b.currentThemeObject,a.getAllThemes=b.getAllThemes,a.getAllThemes(),a.themes=b.themes,a.newQuestion="",a.addQuestion=c,a.deleteQuestion=d,a.chooseTheme=e,a.addTheme=b.addTheme,a.updateTheme=b.updateTheme}]),myApp.controller("LoginController",["$scope","$http","$location","UserService",function(a,b,c,d){a.user={username:"",password:""},a.message="",a.login=function(){""===a.user.username||""===a.user.password?a.message="Please enter your username and password":b.post("/",a.user).then(function(b){b.data.username?(console.log("success: ",b.data),c.path("/chooseTheme")):(console.log("failure: ",b),a.message="Incorrect login information")})},a.registerUser=function(){""===a.user.username||""===a.user.password?a.message="Choose a username and password!":b.post("/register",a.user).then(function(a){console.log("success"),c.path("/login")},function(b){console.log("error"),a.message="Please try again"})}}]),myApp.controller("SessionController",["$scope","$interval","$location","UserService",function(a,b,c,d){function e(b,c){a.timer=0,a.timerStatus=0,c.currentRound+=1;var d=a.currentSessionObject.participantsArray;if(c.currentRound===c.numRound){var e=0;for(g=0;g<d.length;g++)d[g].time>=60&&(e+=1);return a.currentSessionObject.percentage=e/d.length*100,void(a.sessionStatus="done")}for(var f=c.randomParticipants[c.currentRound].id,g=0;g<d.length;g++)f===d[g].id&&(d[g].speakStatus="isSpeaking");a.sessionStatus="ready"}function f(){var c=b(function(){a.enabled?(a.timer+=1,a.timer>=15?a.timerStatus=3:a.timer>=10?a.timerStatus=2:a.timer>=5&&(a.timerStatus=1)):b.cancel(c)},1e3)}function g(){a.enabled=!0,f(),a.sessionStatus="talking"}function h(b,c){a.timerEnd=a.timer,a.enabled=!1;for(var d=c.randomParticipants[c.currentRound].id,e=a.currentSessionObject.participantsArray,f=0;f<e.length;f++)d===e[f].id&&(e[f].time=b,e[f].speakStatus="hasSpoke");a.sessionStatus="next"}function i(b){a.currentThemeObject.theme="",a.currentThemeObject.questionsArray=[],b.participantsArray=[],c.path("/chooseTheme"),location.reload(!0)}a.userObject=d.userObject,a.logout=d.logout,a.currentSessionObject=d.currentSessionObject,a.randoms=d.randoms,a.sessionStatus="ready",a.chooseNext=e,a.timer=0,a.timerEnd=0,a.timerStatus=0,a.enabled=!1,a.startTimer=g,a.stopTimer=h,a.currentThemeObject=d.currentThemeObject,a.startAnotherSession=i}]),myApp.controller("SessionIntroController",["$scope","$location","UserService",function(a,b,c){function d(){b.path("/addParticipants")}a.currentSessionObject=c.currentSessionObject,a.startSession=c.startSession,a.goBack=d}]),myApp.controller("SocketController",["$scope","$location","UserService",function(a,b,c){function d(){function b(b){var d=angular.copy(b);return console.log("click'n time"),console.log("name entered",b,d),c.emit("emitName",d),a.name="",!1}var c=io();a.name="",a.enterName=b}console.log("socketController loaded"),d()}]),myApp.factory("UserService",["$http","$location",function(a,b){function c(){a.get("/user").then(function(a){a.data.username?k.userName=a.data.username:b.path("/login")})}function d(){a.get("/user/logout").then(function(a){b.path("/login")})}function e(){a.get("/themes/getAll").then(function(a){return l.data=a.data,l.data})}function f(c){a.post("/themes/addTheme",c).then(function(a){m.data=a.data,n.theme=m.data,b.path("/addParticipants")})}function g(c){console.log("updateObject",c),a.put("/themes/updateTheme",c).then(function(a){m.data=a.data,n.theme=m.data,b.path("/addParticipants")})}function h(c){c.theme.questionsArray.length<c.participantsArray.length&&console.log("you have fewer questions than participants, that is not going to work."),a.post("/sessions/addSession",c).then(function(a){c={},c.data=a.data,b.path("/sessionIntro")})}function i(a){var c=angular.copy(a.theme.questionsArray),d=angular.copy(a.participantsArray);o.randomQuestions=j(c),o.randomParticipants=j(d),o.numRound=d.length,o.currentRound=0;for(var e=o.randomParticipants[o.currentRound].id,f=a.participantsArray,g=0;g<f.length;g++)e===f[g].id&&(f[g].speakStatus="isSpeaking");b.path("/session")}function j(a){for(var b,c,d=a.length;d;)c=Math.floor(Math.random()*d--),b=a[d],a[d]=a[c],a[c]=b;return a}var k={},l={},m={};m.theme="",m.questionsArray=[];var n={};n.theme=m,n.participantsArray=[];var o={};return o.randomQuestions=[],o.randomParticipants=[],{userObject:k,getuser:c,logout:d,currentThemeObject:m,themes:l,getAllThemes:e,addTheme:f,updateTheme:g,currentSessionObject:n,saveSession:h,startSession:i,randoms:o}}]);