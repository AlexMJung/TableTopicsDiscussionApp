var myApp=angular.module("myApp",["ngRoute"]);myApp.filter("secondsToDateTime",[function(){return function(a){return new Date(1970,0,1).setSeconds(a)}}]),myApp.config(["$routeProvider","$locationProvider",function(a,b){b.hashPrefix(""),a.when("/home",{templateUrl:"/views/templates/home.html",controller:"LoginController"}).when("/register",{templateUrl:"/views/templates/register.html",controller:"LoginController"}).when("/createSession",{templateUrl:"/views/templates/createSession.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/addParticipants",{templateUrl:"/views/templates/addParticipants.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/sessionIntro",{templateUrl:"/views/templates/sessionIntro.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/session",{templateUrl:"/views/templates/session.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).otherwise({redirectTo:"home"})}]),myApp.controller("LoginController",["$scope","$http","$location","UserService",function(a,b,c,d){a.getAllSessions=d.getAllSessions,a.getAllSessions(),a.user={username:"",password:""},a.message="",a.login=function(){""===a.user.username||""===a.user.password?a.message="Please enter your username and password":(console.log("sending to server...",a.user),b.post("/",a.user).then(function(b){b.data.username?(console.log("success: ",b.data),c.path("/createSession")):(console.log("failure: ",b),a.message="Incorrect login information")}))},a.registerUser=function(){""===a.user.username||""===a.user.password?a.message="Choose a username and password!":(console.log("sending to server...",a.user),b.post("/register",a.user).then(function(a){console.log("success"),c.path("/home")},function(b){console.log("error"),a.message="Please try again"}))}}]),myApp.controller("UserController",["$scope","$http","$location","$interval","$animate","UserService",function(a,b,c,d,e,f){function g(b){a.sessionObject=b,a.sessionObject.participantsArray=[],b={}}function h(b){if(""!==b){var c=angular.copy(b);a.sessionObject.questionsArray.push(c),a.newQuestion=""}}function i(b){a.sessionObject.questionsArray.splice(b,1)}function j(b){if(""!==b){!0===t&&(console.log("cleaning stuff out"),a.sessionObject.participantsArray=[],a.currentSessionObject.data.participantsArray=[],console.log(a.currentSessionObject.data.participantsArray),t=!1);var c=angular.copy(b);a.sessionObject.participantsArray.push(c),a.newParticipant=""}}function k(b){a.sessionObject.participantsArray.splice(b,1)}function l(b,c){console.log("choosing a question, then choosing a name"),console.log("I've got this object to play with",c),console.log("This is the person that I think just spoke",c.randomParticipants[c.currentRound]),console.log("This is how long I think that they spoke for",a.timer),a.timer=0,c.currentRound+=1}function m(){var b=d(function(){a.enabled?(console.log("plus one"),a.timer+=1):(console.log("is this happening"),d.cancel(b))},1e3)}function n(){a.enabled=!0,console.log("start timer"),m()}function o(){console.log("stop timer"),a.timerEnd=a.timer,a.enabled=!1}function p(){console.log("endSession")}a.userObject=f.userObject,a.logout=f.logout,a.currentSessionObject=f.currentSessionObject,a.createSession=f.createSession,a.saveParticipants=f.saveParticipants,a.allSessions=f.allSessions,a.getAllSessions=f.getAllSessions,a.startSession=f.startSession,a.randoms=f.randoms,a.saveSession=f.saveSession;var q={},r=[],s=[];q.sessionName="",q.sessionTheme="",q.questionsArray=r,q.participantsArray=s,a.sessionObject=q,a.newQuestion="",a.chooseSession=g,a.addQuestion=h,a.deleteQuestion=i,a.newParticipant="",a.addParticipant=j,a.deleteParticipant=k;var t=!0;console.log("firstParticipant",t),a.chooseNext=l,a.timer=0,a.timerEnd=0,a.enabled=!1,a.startTimer=n,a.stopTimer=o,a.endSession=p}]),myApp.factory("UserService",["$http","$location",function(a,b){function c(){a.get("/createSession/getAll").then(function(a){console.log("getAllSessions response",a),m.data=a.data})}function d(c){a.post("/createSession/addSession",c).then(function(a){l.data=a.data,b.path("/addParticipants")})}function e(c){console.log("another update, save session changes"),console.log("here is the object I have to play with",c);var d=c;a.put("/createSession/saveSession",d).then(function(a){console.log("response",a),l.data=a.data,l.data.participantsArray=[],b.path("/addParticipants")})}function f(c,d){c.data.questionsArray.length<d.participantsArray.length&&console.log("you have fewer questions than participants, that is not going to work.");var e={};e.id=c.data._id,e.participantsArray=d.participantsArray,console.log("putObject",e),a.put("/createSession/saveParticipants",e).then(function(a){console.log("response",a),c.data=a.data,console.log("currentSessionObject.data",c.data),b.path("/sessionIntro")})}function g(a,c){console.log("I'm going to start a session. I've got to randomize some stuff first."),console.log("questions and then participants",a,c),a=angular.copy(a),c=angular.copy(c),n.randomQuestions=j(a),n.randomParticipants=j(c),n.numRound=c.length,n.currentRound=0,console.log("randomQuestions and then randomParticipants then numRound then currentRound",n.randomQuestions,n.randomParticipants,n.numRound,n.currentRound),b.path("/session")}function h(){a.get("/user").then(function(a){a.data.username?(k.userName=a.data.username,console.log("User Data: ",k.userName)):b.path("/home")})}function i(){a.get("/user/logout").then(function(a){console.log("logged out"),b.path("/home")})}function j(a){console.log("inside randomizePeople");for(var b,c,d=a.length;d;)c=Math.floor(Math.random()*d--),b=a[d],a[d]=a[c],a[c]=b;return a}console.log("User Service Loaded");var k={},l={},m={},n={};return c(),{userObject:k,currentSessionObject:l,allSessions:m,getAllSessions:c,createSession:d,saveParticipants:f,startSession:g,getuser:h,logout:i,randoms:n,saveSession:e}}]);