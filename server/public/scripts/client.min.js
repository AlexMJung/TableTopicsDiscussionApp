var myApp=angular.module("myApp",["ngRoute"]);myApp.filter("secondsToDateTime",[function(){return function(a){return new Date(1970,0,1).setSeconds(a)}}]),myApp.config(["$routeProvider","$locationProvider",function(a,b){b.hashPrefix(""),a.when("/login",{templateUrl:"/views/templates/login.html",controller:"LoginController"}).when("/register",{templateUrl:"/views/templates/register.html",controller:"LoginController"}).when("/chooseTheme",{templateUrl:"/views/templates/chooseTheme.html",controller:"ChooseThemeController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/addParticipants",{templateUrl:"/views/templates/addParticipants.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/sessionIntro",{templateUrl:"/views/templates/sessionIntro.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).when("/session",{templateUrl:"/views/templates/session.html",controller:"UserController",resolve:{getuser:["UserService",function(a){return a.getuser()}]}}).otherwise({redirectTo:"login"})}]),myApp.controller("ChooseThemeController",["$scope","$http","$location","$interval","$animate","UserService",function(a,b,c,d,e,f){function g(b){if(""!==b){var c=angular.copy(b);a.currentThemeObject.questionsArray.push(c),a.newQuestion=""}}function h(b){a.currentThemeObject.questionsArray.splice(b,1)}function i(b){console.log("I made it to chooseTheme, and I have this object",b),a.currentThemeObject=b,b={}}function j(b){newTheme=angular.copy(b),a.addTheme(newTheme)}a.userObject=f.userObject,a.logout=f.logout,a.currentThemeObject=f.currentThemeObject,a.getAllThemes=f.getAllThemes,a.getAllThemes(),a.themes=f.themes,console.log("$scope.themes",a.themes),a.newQuestion="",a.addQuestion=g,a.deleteQuestion=h,a.chooseTheme=i,a.addTheme=f.addTheme,a.addNewTheme=j,a.updateTheme=f.updateTheme}]),myApp.controller("LoginController",["$scope","$http","$location","UserService",function(a,b,c,d){a.user={username:"",password:""},a.message="",a.login=function(){""===a.user.username||""===a.user.password?a.message="Please enter your username and password":(console.log("sending to server...",a.user),b.post("/",a.user).then(function(b){b.data.username?(console.log("success: ",b.data),c.path("/chooseTheme")):(console.log("failure: ",b),a.message="Incorrect login information")}))},a.registerUser=function(){""===a.user.username||""===a.user.password?a.message="Choose a username and password!":(console.log("sending to server...",a.user),b.post("/register",a.user).then(function(a){console.log("success"),c.path("/login")},function(b){console.log("error"),a.message="Please try again"}))}}]),myApp.controller("UserController",["$scope","$http","$location","$interval","$animate","UserService",function(a,b,c,d,e,f){function g(b){if(""!==b){!0===q&&(console.log("cleaning stuff out"),a.sessionObject.participantsArray=[],a.currentSessionObject.data.participantsArray=[],console.log(a.currentSessionObject.data.participantsArray),q=!1);var c=angular.copy(b);a.sessionObject.participantsArray.push(c),a.newParticipant=""}}function h(b){a.sessionObject.participantsArray.splice(b,1)}function i(b,c){console.log("choosing a question, then choosing a name"),console.log("I've got this object to play with",c),console.log("This is the person that I think just spoke",c.randomParticipants[c.currentRound]),console.log("This is how long I think that they spoke for",a.timer),a.timer=0,c.currentRound+=1}function j(){var b=d(function(){a.enabled?(console.log("plus one"),a.timer+=1):(console.log("is this happening"),d.cancel(b))},1e3)}function k(){a.enabled=!0,console.log("start timer"),j()}function l(){console.log("stop timer"),a.timerEnd=a.timer,a.enabled=!1}function m(){console.log("endSession")}a.userObject=f.userObject,a.logout=f.logout,a.currentSessionObject=f.currentSessionObject,a.createSession=f.createSession,a.saveParticipants=f.saveParticipants,a.allThemes=f.allThemes,a.getAllThemes=f.getAllThemes,a.startSession=f.startSession,a.randoms=f.randoms,a.saveSession=f.saveSession;var n={},o=[],p=[];n.sessionName="",n.sessionTheme="",n.questionsArray=o,n.participantsArray=p,a.sessionObject=n,a.newParticipant="",a.addParticipant=g,a.deleteParticipant=h;var q=!0;console.log("firstParticipant",q),a.chooseNext=i,a.timer=0,a.timerEnd=0,a.enabled=!1,a.startTimer=k,a.stopTimer=l,a.endSession=m}]),myApp.factory("UserService",["$http","$location",function(a,b){function c(){a.get("/user").then(function(a){a.data.username?(h.userName=a.data.username,console.log("User Data: ",h.userName)):b.path("/login")})}function d(){a.get("/user/logout").then(function(a){b.path("/login")})}function e(){a.get("/themes/getAll").then(function(a){return console.log("getAllThemes response",a),i.data=a.data,i.data})}function f(c){a.post("/themes/addTheme",c).then(function(a){j.data=a.data,b.path("/addParticipants")})}function g(c){a.put("/themes/updateTheme",c).then(function(a){j.data=a.data,b.path("/addParticipants")})}console.log("User Service Loaded");var h={},i={},j={};return j.theme="",j.questionsArray=[],{userObject:h,getuser:c,logout:d,currentThemeObject:j,themes:i,getAllThemes:e,addTheme:f,updateTheme:g}}]);